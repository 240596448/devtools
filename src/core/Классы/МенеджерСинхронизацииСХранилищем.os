// #Использовать v8runner
// #Использовать fs
// #Использовать strings
#Использовать gitrunner

Перем Параметры;

Перем КаталогИсходников;

Перем Лог;
Перем Репозиторий;

Процедура ПриСозданииОбъекта()
	
	Лог = ПараметрыПриложения.Лог();
	Параметры = ПараметрыПриложения.ПолучитьНастройки();
	
	Репозиторий = Параметры.Репозиторий;
	
	КаталогИсходников = Репозиторий.ПолныйПутьКИсходникам();

КонецПроцедуры

Процедура ВыгрузитьИзмененияВХранилище() Экспорт

	// http://gitsrv01/nadulich/devtools/-/issues/1

	// 1. Запустить команду гитсинк
	Команда = "gitsync.bat --v8version=8.3.25.1286 sync -u Администратор ./temp/хранилище ./src";
	//Служебные.ИсполнитьКоманду(Команда, Репозиторий.Путь);

	// 2. обновить базу из хранилища
	Команда = "vrunner.bat loadrepo --v8version=8.3.25.1286 --ibconnection /Ssrv1c\test --storage-name=./temp/хранилище  --storage-user=Администратор";
	//Служебные.ИсполнитьКоманду(Команда, Репозиторий.Путь);
	
	// 3. перейти на ветку gitsync
	Команда = "git checkout gitsync";
	Служебные.ИсполнитьКоманду(Команда, Репозиторий.Путь);
	Команда = "git pull";
	Служебные.ИсполнитьКоманду(Команда, Репозиторий.Путь);



        
//       проверить, что номер последней версии хранилища и номер версии в ветке совпадают

// УСПЕХ? Нет -> упали


	// 5. выполнить мерж из дев
	Команда = "git merge develop --ff";
	
	//Служебные.ВыполнитьКоманду(Команда, Репозиторий.Путь, "Консоль");
	КодВозврата = Служебные.ИсполнитьКоманду(Команда, Репозиторий.Путь);
	Если КодВозврата = 1 Тогда
		ВызватьИсключение "Ошибка выполнения команды: " + Команда;
	ИначеЕсли КодВозврата = 128 Тогда
		Лог.Ошибка("Выполнение остановлено!");
		// релизовать паузу?
		Возврат;
	ИначеЕсли КодВозврата = 129 Тогда
		ВызватьИсключение "Ошибка выполнения команды: " + Команда;
	ИначеЕсли КодВозврата <> 0 Тогда
		Лог.КритичнаяОшибка("Неизвестная ошибка выполнения команды. Код %1. Команда: %2", КодВозврата, Команда);
	КонецЕсли;
        
	// 6. получить дельту файлов gitsync и origin/gitsync && пусто -> выход
	Команда = "git diff --name-only gitsync origin/gitsync";
	мОбъекты = Служебные.ВыполнитьКоманду(Команда, Репозиторий.Путь, "Массив");
    Если НЕ ЗначениеЗаполнено(мОбъекты) Тогда
		Возврат;
	КонецЕсли;

        
	// 7.      захватить все объекты по дифф-списку

	// УСПЕХ? Нет -> упали



        
//       загрузить объекты по дифф-списку

        
//       поместить в хранилище, коментарий для хранилища:
// git log origin/gitsync..develop --pretty=oneline --merges --abbrev-commit


        
//       отправить ветку
// git push origin gitsync
КонецПроцедуры
